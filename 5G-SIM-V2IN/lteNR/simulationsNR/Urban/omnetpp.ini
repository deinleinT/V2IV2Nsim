[General]

cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-status-frequency = 10s
cmdenv-interactive = true


network = nr.simulationsNR.Urban.NRSeveralBS

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = true
print-undisposed = false

sim-time-limit = 600s 

seed-set = ${0,1,2}

simtime-resolution = ps
#**.scalar-recording = true
#**.vector-recording = true

#**.statistic-recording = false
**.letNic.**.statistic-recording = true
**.letNic.**.scalar-recording = true
**.letNic.**.vector-recording = true
**.udpApp[*].statistic-recording = true
**.udpApp[*].scalar-recording = true
**.udpApp[*].*.vector-recording = true
*.server*.**.statistic-recording = true

**.ppp[*].**.statistic-recording = false
**.sctp.**.statistic-recording = false
**.sctp.statistic-recording = false
**.ppp.**.statistic-recording = false
**.pppIf.**.statistic-recording = false
**.pppInterface.**.statistic-recording = false
**.x2App[*].**.statistic-recording = false
**.x2ppp[*].**.statistic-recording = false
**.networkLayer.**.statistic-recording = false
**.lo0.**.statistic-recording = false
**.am.**.statistic-recording = false
**.am.statistic-recording = false
**.client.**.statistic-recording = false
**.lteNic.sdap.**.statistic-recording = false
**.upf.**.statistic-recording = false
**.ppp*.**.statistic-recording = false
**.router.**.statistic-recording = false

**.coreDebug = false
**.routingRecorder.enabled = false

*.playgroundSizeX = 3000m
*.playgroundSizeY = 3000m
*.playgroundSizeZ = 50m

**.mtu = 40000B

##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.moduleType = "nr.corenetwork.nodes.cars.Car"
*.veinsManager.moduleName = "car"
*.veinsManager.moduleDisplayString = "*='i=veins/node/car;is=vs'"
*.veinsManager.launchConfig = xmldoc("erlangen.launchd.xml")
*.veinsManager.autoShutdown = true
*.veinsManager.updateInterval = 0.01s

*.obstacles.obstacles = xmldoc("config.xml", "//AnalogueModel[@type='SimpleObstacleShadowing']/obstacles")
*.annotations.draw = true

##########################################################
#                      Mobility                          #
##########################################################
*.car[*].mobilityType = "VeinsInetMobility"

**.cellInfo.positionUpdateInterval = 0.01s

##########################################################
#      IP configuration for dynamic-created UEs          #
##########################################################
# enrolled multicast groups must be set in the HostAutoConfigurator (instead of demo.xml), seperated by a single space character
*.car[*].configurator.mcastGroups = "224.0.0.10"

##########################################################
#			         channel parameters                  #
##########################################################
#**.channelControl.pMax = 20W
#**.channelControl.alpha = 2.0
#**.channelControl.sat = -80dBm

**.d2dCapable = false

**.scenarioNR = "DENSE_URBAN_EMBB"
**.channelModelType = "UMa_A"      
**.shadowing = true
**.nodeb_height = 25 # 25 is default
**.ue_height = 1.5
**.carrierfrequency = 2.1
**.building_height = 10 #20 is default
**.street_wide = 20
**.antennaGainUe = 0
**.antennGainEnB = 8
**.antennGainMicro = 5
**.thermalNoise = -104.5
**.ue_noise_figure = 7
**.bs_noise_figure = 5
**.cable_loss = 2
**.fading = true 
**.fading_type = "JAKES"
**.fading_paths = 1
**.extCell_interference = false
**.downlink_interference = true
**.uplink_interference = true
**.tolerateMaxDistViolation = true
**.targetBler = 0.01
**.harqReduction = 0.2
**.lambdaMinTh = 0.02
**.lambdaMaxTh = 0.2
**.lambdaRatioTh = 20
**.correlation_distance = 1
**.cqiFlag = false

**.dynamicNlos = true #if true, NLOS evaluation in 2D is conducted, if false, NLOS evaluation is done with probability formulas
**.NlosEvaluationIn3D = true # if dynamicNlos is false, this flag is also false, if both flags are true, the NLOS is evaluated in 3D, only relevant when obstacles (buildings) are included (e.g., urban scenario)

**.mac.schedulingDisciplineUl = "PF"
**.mac.schedulingDisciplineDl = "PF"
#PF
#MAXCI
#DRR

#**.antennaCws = "2;"
#**.txDirection = "ANISOTROPIC"
**.txDirection = "OMNI" #physical layer parameter

##########################################################
#              LTE specific parameters                   #
##########################################################

# Enable dynamic association of UEs (based on best SINR)
**.dynamicCellAssociation = true

**.car[*].macCellId = intuniform(1,8)    # useless if dynamic association is disabled
**.car[*].masterId = intuniform(1,8)     # useless if dynamic association is disabled
**.gNodeB1.macCellId = 1
**.gNodeB1.macNodeId = 1
**.gNodeB2.macCellId = 2
**.gNodeB2.macNodeId = 2 
**.gNodeB3.macCellId = 3
**.gNodeB3.macNodeId = 3
**.gNodeB4.macCellId = 4
**.gNodeB4.macNodeId = 4  
**.gNodeB5.macCellId = 5
**.gNodeB5.macNodeId = 5 
**.gNodeB6.macCellId = 6
**.gNodeB6.macNodeId = 6 
**.gNodeB7.macCellId = 7
**.gNodeB7.macNodeId = 7 
**.gNodeB8.macCellId = 8
**.gNodeB8.macNodeId = 8 
**.gNodeBCount = 8

# AMC
#15 30 60 
**.binder.numerology = 15
**.cellInfo.numRbDl = 270
**.cellInfo.numRbUl = 270
**.numBands = 1

##
**.nrHarq = true
**.numberHarqProcesses = 8
**.numberHarqProcessesNR = 16

**.useSINRThreshold = false #checks if the SINR of a UE is lower than SINRThreshold in UL
#**.thresholdDirection = "DL"
#**.SINRThreshold = 5 # if useSINRThreshold true, the SINR in UL is used to check, whether a UE is in coverage or not (during Handover), if the SINR to all Base stations is lower than this value, the UE is not connected to any base station
        
#2, 4, 6 or 8 codeblockgroups are allowed
**.useCodeBlockGroups = true
**.numberOfCodeBlockGroups = 8

**.useQosModel = true
**.combineQosWithRac = true
**.lambdaPriority = 1
**.lambdaRemainDelayBudget = 0
**.lambdaCqi = 0
**.lambdaRtx = 0
**.lambdaByteSize = 0

##
#MCS Table --> if false, the default table is used 38.214, 5.1.3.1-1
#if true --> table 38.214, 5.1.3.1-3???
**.useExtendedMcsTable = true

############### AMC MODULE PARAMETERS ###############
**.rbAllocationType = "localized"
**.mac.amcMode = "AUTO"
**.feedbackType = "WIDEBAND"
**.feedbackGeneratorType = "IDEAL"
**.maxHarqRtx = 4
**.mac.queueSize = 2MiB
**.pfAlpha = 0.95

**.rtxSignalisedFlagEnabled = false #in UL a RTX is send first before following packets
**.pfTmsAwareDL = false

############### Transmission Power ##################
**.ueTxPower = 23
#**.microTxPower = 20
**.eNodeBTxPower = 46

# X2 and SCTP configuration
*.gNodeB*.numX2Apps = 7    # one x2App per peering eNodeB
*.gNodeB*.x2App[*].server*.localPort = 7000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)

*.gNodeB1.x2App[0].client.connectAddress = "gNodeB2%x2ppp0"
*.gNodeB2.x2App[0].client.connectAddress = "gNodeB1%x2ppp0"

*.gNodeB1.x2App[1].client.connectAddress = "gNodeB3%x2ppp0"
*.gNodeB3.x2App[0].client.connectAddress = "gNodeB1%x2ppp1"

*.gNodeB1.x2App[2].client.connectAddress = "gNodeB4%x2ppp0"
*.gNodeB4.x2App[0].client.connectAddress = "gNodeB1%x2ppp2"

*.gNodeB1.x2App[3].client.connectAddress = "gNodeB5%x2ppp0"
*.gNodeB5.x2App[0].client.connectAddress = "gNodeB1%x2ppp3"

*.gNodeB1.x2App[4].client.connectAddress = "gNodeB6%x2ppp0"
*.gNodeB6.x2App[0].client.connectAddress = "gNodeB1%x2ppp4"

*.gNodeB1.x2App[5].client.connectAddress = "gNodeB7%x2ppp0"
*.gNodeB7.x2App[0].client.connectAddress = "gNodeB1%x2ppp5"

*.gNodeB2.x2App[1].client.connectAddress = "gNodeB3%x2ppp1"
*.gNodeB3.x2App[1].client.connectAddress = "gNodeB2%x2ppp1"

*.gNodeB2.x2App[2].client.connectAddress = "gNodeB4%x2ppp1"
*.gNodeB4.x2App[1].client.connectAddress = "gNodeB2%x2ppp2"

*.gNodeB2.x2App[3].client.connectAddress = "gNodeB5%x2ppp1"
*.gNodeB5.x2App[1].client.connectAddress = "gNodeB2%x2ppp3"

*.gNodeB2.x2App[4].client.connectAddress = "gNodeB6%x2ppp1"
*.gNodeB6.x2App[1].client.connectAddress = "gNodeB2%x2ppp4"

*.gNodeB2.x2App[5].client.connectAddress = "gNodeB7%x2ppp1"
*.gNodeB7.x2App[1].client.connectAddress = "gNodeB2%x2ppp5"

*.gNodeB3.x2App[2].client.connectAddress = "gNodeB4%x2ppp2"
*.gNodeB4.x2App[2].client.connectAddress = "gNodeB3%x2ppp2"

*.gNodeB3.x2App[3].client.connectAddress = "gNodeB5%x2ppp2"
*.gNodeB5.x2App[2].client.connectAddress = "gNodeB3%x2ppp3"

*.gNodeB3.x2App[4].client.connectAddress = "gNodeB6%x2ppp2"
*.gNodeB6.x2App[2].client.connectAddress = "gNodeB3%x2ppp4"

*.gNodeB3.x2App[5].client.connectAddress = "gNodeB7%x2ppp2"
*.gNodeB7.x2App[2].client.connectAddress = "gNodeB3%x2ppp5"

*.gNodeB4.x2App[3].client.connectAddress = "gNodeB5%x2ppp3"
*.gNodeB5.x2App[3].client.connectAddress = "gNodeB4%x2ppp3"

*.gNodeB4.x2App[4].client.connectAddress = "gNodeB6%x2ppp3"
*.gNodeB6.x2App[3].client.connectAddress = "gNodeB4%x2ppp4"

*.gNodeB4.x2App[5].client.connectAddress = "gNodeB7%x2ppp3"
*.gNodeB7.x2App[3].client.connectAddress = "gNodeB4%x2ppp5"

*.gNodeB5.x2App[4].client.connectAddress = "gNodeB6%x2ppp4"
*.gNodeB6.x2App[4].client.connectAddress = "gNodeB5%x2ppp4"

*.gNodeB5.x2App[5].client.connectAddress = "gNodeB7%x2ppp4"
*.gNodeB7.x2App[4].client.connectAddress = "gNodeB5%x2ppp5"

*.gNodeB6.x2App[5].client.connectAddress = "gNodeB7%x2ppp5"
*.gNodeB7.x2App[5].client.connectAddress = "gNodeB6%x2ppp5"

*.gNodeB1.x2App[6].client.connectAddress = "gNodeB8%x2ppp0"
*.gNodeB8.x2App[0].client.connectAddress = "gNodeB1%x2ppp6"

*.gNodeB2.x2App[6].client.connectAddress = "gNodeB8%x2ppp1"
*.gNodeB8.x2App[1].client.connectAddress = "gNodeB2%x2ppp6"

*.gNodeB3.x2App[6].client.connectAddress = "gNodeB8%x2ppp2"
*.gNodeB8.x2App[2].client.connectAddress = "gNodeB3%x2ppp6"

*.gNodeB4.x2App[6].client.connectAddress = "gNodeB8%x2ppp3"
*.gNodeB8.x2App[3].client.connectAddress = "gNodeB4%x2ppp6"

*.gNodeB5.x2App[6].client.connectAddress = "gNodeB8%x2ppp4"
*.gNodeB8.x2App[4].client.connectAddress = "gNodeB5%x2ppp6"

*.gNodeB6.x2App[6].client.connectAddress = "gNodeB8%x2ppp5"
*.gNodeB8.x2App[5].client.connectAddress = "gNodeB6%x2ppp6"

*.gNodeB7.x2App[6].client.connectAddress = "gNodeB8%x2ppp6"
*.gNodeB8.x2App[6].client.connectAddress = "gNodeB7%x2ppp6"

**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false

######################################################################################################################
[Config V2VCoopPerc]
# one VoIP and one Video app for this two clients
*.car[*].numUdpApps = 2
*.server1.numUdpApps = 1
*.server2.numUdpApps = 0
*.server3.numUdpApps = 0

**.v2vMulticastFlag = true
**.v2vMulticastDistance = 300.0
sim-time-limit = 300s

# V2X Sender
**.car[*].mobility.initFromDisplayString = false

**.car[*].udpApp[0].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarUL"
**.car[*].udpApp[0].packetName = "V2X"
**.car[*].udpApp[0].destAddresses = "server1"
**.car[*].udpApp[0].localPort = 9999
**.car[*].udpApp[0].destPort = 5088 #+ancestorIndex(1)
**.car[*].udpApp[0].startTime = 15s
**.car[*].udpApp[0].messageLength = 200B
**.car[*].udpApp[0].sendInterval = 100ms

# Destination Server
**.server1.udpApp[0].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerUL"
**.server1.udpApp[0].localPort = 5088 #+ancestorIndex(0) 
**.server1.udpApp[0].destPort = 9999
**.server1.udpApp[0].messageLength = 200B
**.server1.udpApp[0].sendInterval = 100ms

# for receiving broadcasted V2X Messages from other cars
**.car[*].udpApp[1].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarDL"
**.car[*].udpApp[1].localPort = 5088 #+ancestorIndex(0) 
**.car[*].udpApp[1].destPort = 9999
**.car[*].udpApp[1].sendInterval = 100ms
**.car[*].udpApp[1].messageLength = 200B


# Enable handover
**.enableHandover = true
**.handoverLatency = 0.001s
**.handoverDelta = 0.0001s
**.broadcastMessageInterval = 1s
**.exchangeBuffersOnHandover = false # exchange all buffers between old and new masterNodeB

result-dir = V2VCoopPercept-Urban-PF-Var-RTXOn-2RTX-52rb-15num-2100MHz-intf-nrHarq
output-vector-file = ${resultdir}/vector-${seedset}.vec
output-scalar-file = ${resultdir}/scalar-${seedset}.sca
#########################################################################################################################

##########################################################################################################################

[Config VideoDL]

*.car[*].numUdpApps = 1
*.server1.numUdpApps = 1
*.server2.numUdpApps = 0
*.server3.numUdpApps = 0

# DATA
**.car[*].mobility.initFromDisplayString = false
sim-time-limit = 600s

**.server1.udpApp[0].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerDL"
**.server1.udpApp[0].packetName = "Video"
**.server1.udpApp[0].localPort = 9999
**.server1.udpApp[0].destPort = 5088 #+ancestorIndex(1)
**.server1.udpApp[0].startTime = 0.1s
**.server1.udpApp[0].startTimeDL = 15s
**.server1.udpApp[0].sendInterval = 25ms
**.server1.udpApp[0].messageLength = 15000B

# Receivers
**.car[*].udpApp[0].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarDL"
**.car[*].udpApp[0].destAddresses = "server1"
**.car[*].udpApp[0].localPort = 5088 #+ancestorIndex(0) 
**.car[*].udpApp[0].destPort = 9999
**.car[*].udpApp[0].sendInterval = 25ms
**.car[*].udpApp[0].messageLength = 15000B

**.realisticApproach = false

# Enable handover
**.enableHandover = true
**.handoverLatency = 0.001s
**.handoverDelta = 0.0001s
**.broadcastMessageInterval = 1s
**.exchangeBuffersOnHandover = false # exchange all buffers between old and new masterNodeB


result-dir = VideoDL-Urban-PF-Var-RTXOn-2RTX-52rb25mHgnb10mHbuilding10mCorrDist-15num-2100MHz-intf-nrHarq-prob
output-vector-file = ${resultdir}/vector-${seedset}.vec
output-scalar-file = ${resultdir}/scalar-${seedset}.sca

######################################################################################################################################

[Config VideoUL]
# one VoIP and one Video app for this two clients
*.car[*].numUdpApps = 1
*.server1.numUdpApps = 1
*.server2.numUdpApps = 0
*.server3.numUdpApps = 0

# DATA
**.car[*].mobility.initFromDisplayString = false
sim-time-limit = 600s

**.car[*].udpApp[0].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarUL"
**.car[*].udpApp[0].packetName = "Video"
**.car[*].udpApp[0].destAddresses = "server1"
**.car[*].udpApp[0].localPort = 9999
**.car[*].udpApp[0].destPort = 5088 #+ancestorIndex(1)
**.car[*].udpApp[0].startTime = 15s
**.car[*].udpApp[0].sendInterval = 25ms
**.car[*].udpApp[0].messageLength = 15000B

**.realisticApproach = false

**.server1.udpApp[0].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerUL"
**.server1.udpApp[0].localPort = 5088 #+ancestorIndex(0) 
**.server1.udpApp[0].destPort = 9999
**.server1.udpApp[0].sendInterval = 25ms
**.server1.udpApp[0].messageLength = 15000B

# Enable handover
**.enableHandover = true
**.handoverLatency = 0.001s
**.handoverDelta = 0.0001s
**.broadcastMessageInterval = 1s
**.exchangeBuffersOnHandover = false # exchange all buffers between old and new masterNodeB

result-dir = VideoUL-Urban-PF-Var-RTXOn-2RTX-52rb25mHgnb10mHbuilding10mCorrDist-15num-2100MHz-intf-nrHarq-prob
output-vector-file = ${resultdir}/vector-${seedset}.vec
output-scalar-file = ${resultdir}/scalar-${seedset}.sca

####################################################################################################################################

######################################################################################################################################
[Config UL4Applications]
# one VoIP and one Video app for this two clients
*.car[*].numUdpApps = 4
*.server1.numUdpApps = 4
*.server2.numUdpApps = 0
*.server3.numUdpApps = 0

# V2X
**.car[*].mobility.initFromDisplayString = false
sim-time-limit = 600s

**.car[*].udpApp[0].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarUL"
**.car[*].udpApp[0].packetName = "V2X"
**.car[*].udpApp[0].destAddresses = "server1"
**.car[*].udpApp[0].localPort = 9999
**.car[*].udpApp[0].destPort = 5088 #+ancestorIndex(1)
**.car[*].udpApp[0].startTime = 15s
**.car[*].udpApp[0].messageLength = 400B
**.car[*].udpApp[0].sendInterval = 0.1s

**.server1.udpApp[0].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerUL"
**.server1.udpApp[0].localPort = 5088 #+ancestorIndex(0) 
**.server1.udpApp[0].destPort = 9999
**.server1.udpApp[0].messageLength = 400B
**.server1.udpApp[0].sendInterval = 0.1s

#Video
**.car[*].udpApp[1].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarUL"
**.car[*].udpApp[1].packetName = "VoIP"
**.car[*].udpApp[1].destAddresses = "server1"
**.car[*].udpApp[1].localPort = 9998
**.car[*].udpApp[1].destPort = 5087 #+ancestorIndex(1)
**.car[*].udpApp[1].startTime = 15s
**.car[*].udpApp[1].messageLength = 70B
**.car[*].udpApp[1].sendInterval = 0.02s

**.server1.udpApp[1].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerUL"
**.server1.udpApp[1].localPort = 5087 #+ancestorIndex(0) 
**.server1.udpApp[1].destPort = 9998
**.server1.udpApp[1].messageLength = 70B
**.server1.udpApp[1].sendInterval = 0.02s

#VoIP
**.car[*].udpApp[2].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarUL"
**.car[*].udpApp[2].packetName = "Video"
**.car[*].udpApp[2].destAddresses = "server1"
**.car[*].udpApp[2].localPort = 9997
**.car[*].udpApp[2].destPort = 5086 #+ancestorIndex(1)
**.car[*].udpApp[2].startTime = 15s
**.car[*].udpApp[2].messageLength = 15000B
**.car[*].udpApp[2].sendInterval = 0.025s

**.server1.udpApp[2].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerUL"
**.server1.udpApp[2].localPort = 5086 #+ancestorIndex(0) 
**.server1.udpApp[2].destPort = 9997
**.server1.udpApp[2].messageLength = 15000B
**.server1.udpApp[2].sendInterval = 0.025s

#Data
**.car[*].udpApp[3].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarUL"
**.car[*].udpApp[3].packetName = "Data"
**.car[*].udpApp[3].destAddresses = "server1"
**.car[*].udpApp[3].localPort = 9996
**.car[*].udpApp[3].destPort = 5085 #+ancestorIndex(1)
**.car[*].udpApp[3].startTime = 15s
**.car[*].udpApp[3].messageLength = 2000B
**.car[*].udpApp[3].sendInterval = 0.08s

**.server1.udpApp[3].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerUL"
**.server1.udpApp[3].localPort = 5085 #+ancestorIndex(0) 
**.server1.udpApp[3].destPort = 9996
**.server1.udpApp[3].sendInterval = 0.08s
**.server1.udpApp[3].messageLength = 2000B

# Enable handover
**.enableHandover = true
**.handoverLatency = 0.001s
**.handoverDelta = 0.0001s
**.broadcastMessageInterval = 1s
**.exchangeBuffersOnHandover = false # exchange all buffers between old and new masterNodeB

result-dir = UL-4app-Urban
output-vector-file = ${resultdir}/vector-${seedset}.vec
output-scalar-file = ${resultdir}/scalar-${seedset}.sca

###################################################################################################################################

[Config DL4Applications]
# one VoIP and one Video app for this two clients
*.car[*].numUdpApps = 4
*.server1.numUdpApps = 4
*.server2.numUdpApps = 0
*.server3.numUdpApps = 0

# Video Client Configuration
**.car[*].mobility.initFromDisplayString = false

sim-time-limit = 600s

#VoIP
**.server1.udpApp[0].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerDL"
**.server1.udpApp[0].packetName = "V2X"
**.server1.udpApp[0].localPort = 9999
**.server1.udpApp[0].destPort = 5088 #+ancestorIndex(1)
**.server1.udpApp[0].startTime = 0.1s
**.server1.udpApp[0].startTimeDL = 15s
**.server1.udpApp[0].messageLength = 400B
**.server1.udpApp[0].sendInterval = 0.1s

**.car[*].udpApp[0].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarDL"
**.car[*].udpApp[0].destAddresses = "server1"
**.car[*].udpApp[0].localPort = 5088 #+ancestorIndex(0) 
**.car[*].udpApp[0].destPort = 9999
**.car[*].udpApp[0].messageLength = 400B
**.car[*].udpApp[0].sendInterval = 0.1s

#V2X
**.server1.udpApp[1].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerDL"
**.server1.udpApp[1].packetName = "VoIP"
**.server1.udpApp[1].localPort = 9998
**.server1.udpApp[1].destPort = 5087 #+ancestorIndex(1)
**.server1.udpApp[1].startTime = 0.1s
**.server1.udpApp[1].startTimeDL = 15s
**.server1.udpApp[1].messageLength = 70B
**.server1.udpApp[1].sendInterval = 0.02s

**.car[*].udpApp[1].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarDL"
**.car[*].udpApp[1].destAddresses = "server1"
**.car[*].udpApp[1].localPort = 5087 #+ancestorIndex(0) 
**.car[*].udpApp[1].destPort = 9998
**.car[*].udpApp[1].messageLength = 70B
**.car[*].udpApp[1].sendInterval = 0.02s

#Video
**.server1.udpApp[2].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerDL"
**.server1.udpApp[2].packetName = "Video"
**.server1.udpApp[2].localPort = 9997
**.server1.udpApp[2].destPort = 5086 #+ancestorIndex(1)
**.server1.udpApp[2].startTime = 0.1s
**.server1.udpApp[2].startTimeDL = 15s
**.server1.udpApp[2].messageLength = 15000B
**.server1.udpApp[2].sendInterval = 0.025s

**.car[*].udpApp[2].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarDL"
**.car[*].udpApp[2].destAddresses = "server1"
**.car[*].udpApp[2].localPort = 5086 #+ancestorIndex(0) 
**.car[*].udpApp[2].destPort = 9997
**.car[*].udpApp[2].messageLength = 15000B
**.car[*].udpApp[2].sendInterval = 0.025s

#Data
**.server1.udpApp[3].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerDL"
**.server1.udpApp[3].packetName = "Data"
**.server1.udpApp[3].localPort = 9996
**.server1.udpApp[3].destPort = 5085 #+ancestorIndex(1)
**.server1.udpApp[3].startTime = 0.1s
**.server1.udpApp[3].startTimeDL = 15s
**.server1.udpApp[3].messageLength = 2000B
**.server1.udpApp[3].sendInterval = 0.08s

**.car[*].udpApp[3].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarDL"
**.car[*].udpApp[3].destAddresses = "server1"
**.car[*].udpApp[3].localPort = 5085 #+ancestorIndex(0) 
**.car[*].udpApp[3].destPort = 9996
**.car[*].udpApp[3].messageLength = 2000B
**.car[*].udpApp[3].sendInterval = 0.08s

# Enable handover
**.enableHandover = true
**.handoverLatency = 0.001s
**.handoverDelta = 0.0001s
**.broadcastMessageInterval = 1s
**.exchangeBuffersOnHandover = false # exchange all buffers between old and new masterNodeB

result-dir = DL-4app-Urban
output-vector-file = ${resultdir}/vector-${seedset}.vec
output-scalar-file = ${resultdir}/scalar-${seedset}.sca

########################################################################################################################
##########################################################################################################################
[Config RemoteDrivingDL]

*.car[*].numUdpApps = 2
*.server1.numUdpApps = 2
*.server2.numUdpApps = 0
*.server3.numUdpApps = 0

# 
**.car[*].mobility.initFromDisplayString = false

sim-time-limit = 600s

#V2X
**.server1.udpApp[0].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerDL"
**.server1.udpApp[0].packetName = "V2X"
**.server1.udpApp[0].localPort = 9999
**.server1.udpApp[0].destPort = 5088 #+ancestorIndex(1)
**.server1.udpApp[0].startTime = 0.1s
**.server1.udpApp[0].startTimeDL = 15s
**.server1.udpApp[0].messageLength = 1000B
**.server1.udpApp[0].sendInterval = 0.03s

**.car[*].udpApp[0].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarDL"
**.car[*].udpApp[0].destAddresses = "server1"
**.car[*].udpApp[0].localPort = 5088 #+ancestorIndex(0) 
**.car[*].udpApp[0].destPort = 9999
**.car[*].udpApp[0].messageLength = 1000B
**.car[*].udpApp[0].sendInterval = 0.03s

#Data
**.server1.udpApp[1].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerDL"
**.server1.udpApp[1].packetName = "Data"
**.server1.udpApp[1].localPort = 9998
**.server1.udpApp[1].destPort = 5087 #+ancestorIndex(1)
**.server1.udpApp[1].startTime = 0.1s
**.server1.udpApp[1].startTimeDL = 15s
**.server1.udpApp[1].messageLength = intuniform(100B,1000B)
**.server1.udpApp[1].sendInterval = uniform(0.01s,2s)

**.car[*].udpApp[1].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarDL"
**.car[*].udpApp[1].destAddresses = "server1"
**.car[*].udpApp[1].localPort = 5087 #+ancestorIndex(0) 
**.car[*].udpApp[1].destPort = 9998
**.car[*].udpApp[1].messageLength = intuniform(100B,1000B)
**.car[*].udpApp[1].sendInterval = uniform(0.01s,2s)

# Enable handover
**.enableHandover = true
**.handoverLatency = 0.001s
**.handoverDelta = 0.0001s
**.broadcastMessageInterval = 1s
**.exchangeBuffersOnHandover = false # exchange all buffers between old and new masterNodeB

**.remoteDrivingDL = true
**.remoteCarFactor = 2
**.remoteCarJustOne = false

result-dir = RemoteDrivingDL-Urban-PF-Var-RTXOn-2RTX-106rb-15num-2100MHz-intf-nrHarq
output-vector-file = ${resultdir}/vector-${seedset}.vec
output-scalar-file = ${resultdir}/scalar-${seedset}.sca


########################################################################################################################
##########################################################################################################################
[Config RemoteDrivingUL]

*.car[*].numUdpApps = 2
*.server1.numUdpApps = 2
*.server2.numUdpApps = 0
*.server3.numUdpApps = 0

# 
**.car[*].mobility.initFromDisplayString = false

sim-time-limit = 600s

#V2X - every 10th car is a remote car
**.car[*].udpApp[0].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarUL"
**.car[*].udpApp[0].packetName = "V2X"
**.car[*].udpApp[0].destAddresses = "server1"
**.car[*].udpApp[0].localPort = 9998
**.car[*].udpApp[0].destPort = 5087 #+ancestorIndex(1)
**.car[*].udpApp[0].startTime = 15s
**.car[*].udpApp[0].messageLength = 1000B
**.car[*].udpApp[0].sendInterval = 0.03s

**.server1.udpApp[0].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerUL"
**.server1.udpApp[0].localPort = 5087 #+ancestorIndex(0) 
**.server1.udpApp[0].destPort = 9998
**.server1.udpApp[0].messageLength = 1000B
**.server1.udpApp[0].sendInterval = 0.03s

####
#Data
**.car[*].udpApp[1].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarUL"
**.car[*].udpApp[1].packetName = "Data"
**.car[*].udpApp[1].destAddresses = "server1"
**.car[*].udpApp[1].localPort = 9999
**.car[*].udpApp[1].destPort = 5088 #+ancestorIndex(1)
**.car[*].udpApp[1].startTime = 15s
**.car[*].udpApp[1].messageLength = intuniform(100B,1000B)
**.car[*].udpApp[1].sendInterval = uniform(0.01s,2s)

**.server1.udpApp[1].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerUL"
**.server1.udpApp[1].localPort = 5088 #+ancestorIndex(0) 
**.server1.udpApp[1].destPort = 9999
**.server1.udpApp[1].messageLength = intuniform(100B,1000B)
**.server1.udpApp[1].sendInterval = uniform(0.01s,2s)


# Enable handover
**.enableHandover = true
**.handoverLatency = 0.001s
**.handoverDelta = 0.0001s
**.broadcastMessageInterval = 1s
**.exchangeBuffersOnHandover = false # exchange all buffers between old and new masterNodeB

**.remoteDrivingUL = true
**.remoteCarFactor = 10
**.remoteCarJustOne = false

result-dir = RemoteDrivingUL-Urban-PF-Var-RTXOn-2RTX-52rb-15num-2100MHz-intf-nrHarq
output-vector-file = ${resultdir}/vector-${seedset}.vec
output-scalar-file = ${resultdir}/scalar-${seedset}.sca

########################################################################################################################


